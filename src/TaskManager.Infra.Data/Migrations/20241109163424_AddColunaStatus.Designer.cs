// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TaskManager.Infra.Data.Contextos;

#nullable disable

namespace TaskManager.Infra.Data.Migrations
{
    [DbContext(typeof(RepositoryContext))]
    [Migration("20241109163424_AddColunaStatus")]
    partial class AddColunaStatus
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TaskManager.Domain.Entities.Projeto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ProjetoId");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Projetos");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c9d4c053-49b6-410c-bc78-2d54a9991870"),
                            Nome = "Projeto Z"
                        },
                        new
                        {
                            Id = new Guid("3d490a70-94ce-4d15-9494-5248280c2ce3"),
                            Nome = "Projeto X"
                        });
                });

            modelBuilder.Entity("TaskManager.Domain.Entities.Tarefa", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("TarefaId");

                    b.Property<DateTime>("DataVencimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ProjetoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProjetoId");

                    b.ToTable("Tarefas");

                    b.HasData(
                        new
                        {
                            Id = new Guid("80abbca8-664d-4b20-b5de-024705497d4a"),
                            DataVencimento = new DateTime(2024, 11, 14, 13, 34, 24, 340, DateTimeKind.Local).AddTicks(3739),
                            Descricao = "Essa é uma tarefa para realizar o cadastro de usuários no sistema",
                            ProjetoId = new Guid("c9d4c053-49b6-410c-bc78-2d54a9991870"),
                            Status = 0,
                            Titulo = "Cadastrar Usuários no Sistema"
                        },
                        new
                        {
                            Id = new Guid("86dba8c0-d178-41e7-938c-ed49778fb52a"),
                            DataVencimento = new DateTime(2024, 11, 19, 13, 34, 24, 340, DateTimeKind.Local).AddTicks(3757),
                            Descricao = "Essa é uma tarefa para criar uma nova sprint para o projeto",
                            ProjetoId = new Guid("c9d4c053-49b6-410c-bc78-2d54a9991870"),
                            Status = 0,
                            Titulo = "Criar uma nova Sprint para o Projeto"
                        },
                        new
                        {
                            Id = new Guid("021ca3c1-0deb-4afd-ae94-2159a8479811"),
                            DataVencimento = new DateTime(2024, 11, 24, 13, 34, 24, 340, DateTimeKind.Local).AddTicks(3760),
                            Descricao = "Essa é uma tarefa para marcar uma reunião com o time",
                            ProjetoId = new Guid("3d490a70-94ce-4d15-9494-5248280c2ce3"),
                            Status = 0,
                            Titulo = "Marcar reunião de retrospectiva com os membros do time"
                        });
                });

            modelBuilder.Entity("TaskManager.Domain.Entities.Tarefa", b =>
                {
                    b.HasOne("TaskManager.Domain.Entities.Projeto", "Projeto")
                        .WithMany("Tarefa")
                        .HasForeignKey("ProjetoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Projeto");
                });

            modelBuilder.Entity("TaskManager.Domain.Entities.Projeto", b =>
                {
                    b.Navigation("Tarefa");
                });
#pragma warning restore 612, 618
        }
    }
}
